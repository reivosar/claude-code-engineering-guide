version: "0.3"

components:
    program_correctness_verification:
      principle: "Verify program correctness at multiple levels based on application architecture"
      
      syntactic_correctness:
        requirement: "Code compiles/runs without errors"
        verify: "No compilation errors, runtime startup successful"
        methods:
          - "Build process completes successfully"
          - "Application starts without crashes"
          - "No syntax or import errors"
      
      functional_correctness:
        requirement: "Application behaves according to specifications"
        verify: "Core features work as intended"
        methods:
          - "Execute primary user workflows"
          - "Verify expected outputs for given inputs"
          - "Test edge cases and error conditions (see coding-rules/testing-strategy.yml)"
      
      integration_correctness:
        requirement: "Components integrate properly"
        verify: "System components communicate correctly"
        methods:
          - "API endpoints respond correctly"
          - "Database operations succeed"
          - "External service connections work"
          - "Authentication/authorization functions"
      
      practical_correctness:
        requirement: "Application provides real-world value"
        verify: "End-to-end user scenarios complete successfully"
        methods:
          - "Complete realistic usage scenarios"
          - "Verify business logic implementation"
          - "Test with realistic data volumes"
          - "Confirm performance under normal load"